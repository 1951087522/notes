## **项目效果图**

我们基于react实现一个包含移动端，后台管理系统，服务器端以及数据库的项目。

![](./assets/28.png)

### **项目整体目录架构**

项目包含三个方向（移动端，后台管理系统，服务器端以及数据库），工作中由三个不同的团队来开发维护。

所以我们要为三个不同的方向，创建三个不同的目录去开发。

- home 	移动端项目

  我们基于create-react-app脚手架开发，使用mock数据

- admin 	后台管理系统项目

  我们通过webpack实现架手架的功能，使用mock数据

- server 	服务器端与数据库

  我们基于nodejs与mongodb实现服务器端与数据库的开发

### **搭建服务器**

我们基于express实现服务器

创建app

更改模板拓展名以及插值符号

资源静态化

配置路由

mock数据

启动服务（http以及https）

端口号

​			移动端的项目端口号是：3000 		服务器端的端口号是：3001和3002

```js

```



## **移动端**

我们基于create-react-app脚手架开发移动端项目。

技术架构

​	我们使用了create-react-app, react, jsx, ES6, ES Module, Less, webpack, router, axios,redux等

技术实现移动端的开发。

资源发布

​	我们要将静态资源发布到server/static/home目录下

```js
  // ----------- 修改静态资源发布位置
  appBuild: resolveApp('../server/static/home'),
```

​	我们要将模板资源发布到server/views/home.html文件中

### **目录部署**

- src 	开发目录

  ​	components 	共享组件目录

  ​	pages 				页面组件目录

  ​	App 					应用程序组件

  ​	consts 				静态变量

  ​	actions 				消息目录

  ​	reducers 				处理消息模块

  ​	store 					数据源

  ​	index.js 			入口文件

### **移动端配置**

- 输出配置：yarn eject

  ​	config/paths.js								1 静态资源发布位置，2 入口文件拓展名

  ​	config/webpack.config.dev.js		1 添加less加载机

  ​	config/webpack.config.prod.js		1 添加less加载机，2 模板发布位置，3 去除静态文件发布的static目录，4 设置静态资源相对路径

  ```js
        2.// 修改模板资源发布位置
        filename: '../../views/index.html',
  ```
  
   

### **接口文档**

为了保证前后端使用的数据以及接口信息的一致性，我们要定义接口文档。

接口文档中，通常定义三部分内容

- 第一个部分：接口信息

  ​			例如：请求地址，请求方式，文档格式，编码格式，请求头等等

- 第二个部分：携带数据（后端关注）

  ​			如果是get请求，要定义query数据

  ​			如果是post请求，要定义query数据以及post数据

- 第三个部分：返回数据（前端关注）

  ​			要说明返回数据的格式

  ​			接口文档的名称就是通常是请求的路径名称。

```js
{
"data": [ Array: 课程数据列表
{
"_id": String, 课程的id
"img": String, 课程图片
"title": String, 课程标题
"sales": Number, 课程销量
}] }
```

在一些大型公司内部，有一些接口文档平台，我们直接在平台上提交。

在一些小型公司内部，没有接口文档平台，通常写成md,txt,word等格式的文件。

## **后台管理系统**

我们基于react实现授课网站的后台管理系统，维护课程数据。

- 技术架构

  ​	我们使用react, react-router, redux, antd-mobile, webpack, less, ES6, ES Module等技术实现移动端的后台管理系统。

- 资源发布

  ​	我们将静态资源发布到server/static/admin目录下

  ​	我们将模板资源发布到server/views/admin.html文件中

### **目录部署**

- 我们参考create-react-app项目的结构，定义我们的项目。组件及其目录首字母大写。

  - public 	静态资源目录

    ​	index.html 	入口模板文件

  - src 		开发目录

    ​	components 	共享的组件 				

    ​	pages 			所有页面

    ​	App.js 				应用程序组件 			

    ​	consts 			消息类型常量

    ​	actions 			消息目录 					
  
    ​	reducers 		处理消息的
  
    ​	store 				存储数据的
  
  ​	 			 tools 				插件工具
  
  - webpack.config.js 	webpack配置

## **服务器端**

我们基于express实现服务器端的开发。

技术架构

​	我们使用nodejs,express,mongodb,session等技术实现服务器端的开发。

服务器端本质

​	将前端交互产生的数据，存储在服务器端的数据库中

​	将服务器端的数据库的数据，返回给前端去渲染。

### **目录部署**

static 	静态资源目录

views 	模板目录

server 	服务器目录

router 	路由目录

page 	页面相关路由

data 		移动端请求相关路由

admin 	后台管理系统相关路由

lib 		库与配置

cache 	缓存目录

app.js 	入口文件

## **数据库**

导出数据

​	mongoexport -d 数据库名称 -c 集合名称 -o 导出的文件

导入数据

​	mongoimport -d 数据库名称 -c 集合名称 --file 文件地址